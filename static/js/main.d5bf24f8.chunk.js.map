{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","watch","this","window","setInterval","console","log","toLocaleTimeString","setState","prevProps","name","props","clearInterval","className","React","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","removeClock","addClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,IAAIC,MAFd,EAKEC,MAAQ,EALV,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,MAAQE,OAAOC,aAAY,WAC9B,IAAML,EAAO,IAAIC,KAGjBK,QAAQC,IAAIP,EAAKQ,sBAEjB,EAAKC,SAAS,CAAET,WACf,OAfP,gCAkBE,SAAmBU,GACbA,EAAUC,OAASR,KAAKS,MAAMD,MAEhCL,QAAQC,IAAR,uBAA4BG,EAAUC,KAAtC,eAAiDR,KAAKS,MAAMD,SArBlE,kCAyBE,WACEE,cAAcV,KAAKD,SA1BvB,oBA6BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,mBAAGA,UAAU,cAAb,SACGX,KAAKS,MAAMD,OAGd,mBAAGG,UAAU,cAAb,SACGX,KAAKJ,MAAMC,KAAKQ,8BArC3B,GAA2BO,IAAMC,W,MCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJxB,MAAe,CACbyB,UAAWP,IACXQ,UAAU,G,EAGZd,KAAO,E,EAgBPe,YAAc,WACZ,EAAKjB,SAAS,CAAEgB,UAAU,K,EAG5BE,SAAW,WACT,EAAKlB,SAAS,CAAEgB,UAAU,K,uDAnB5B,WAAqB,IAAD,OAClBtB,KAAKQ,KAAOP,OAAOC,aAAY,WAC7B,EAAKI,SAAS,CAAEe,UAAWP,QAC1B,MAEHW,SAASC,iBAAiB,cAAe1B,KAAKuB,aAE9CE,SAASC,iBAAiB,QAAS1B,KAAKwB,Y,kCAG1C,WACEd,cAAcV,KAAKQ,Q,oBAWrB,WACE,MAAgCR,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKX,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAECW,GACC,cAAC,EAAD,CAAOd,KAAMa,W,GAtCLT,IAAMC,WA4CTO,ICxDfO,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.d5bf24f8.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    date: new Date(),\n  };\n\n  watch = 0;\n\n  componentDidMount() {\n    this.watch = window.setInterval(() => {\n      const date = new Date();\n\n      // eslint-disable-next-line no-console\n      console.log(date.toLocaleTimeString());\n\n      this.setState({ date });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.watch);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <p className=\"clock__name\">\n          {this.props.name}\n        </p>\n\n        <p className=\"clock__time\">\n          {this.state.date.toLocaleTimeString()}\n        </p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  name = 0;\n\n  componentDidMount() {\n    this.name = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.removeClock);\n\n    document.addEventListener('click', this.addClock);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.name);\n  }\n\n  removeClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  addClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}